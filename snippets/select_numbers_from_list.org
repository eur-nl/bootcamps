#+TITLE: Sum selected numbers from a list
#+AUTHOR: Peter van Huisstede
#+EMAIL: peter.vanhuisstede@eur.nl
#+LINK_HOME: https://repub.eur.nl
#+LINK_UP:
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://gongzhitaao.org/orgcss/org.css" />
#+LaTeX_CLASS: article
#+LaTeX_HEADER: \usepackage{sectsty}
#+LaTeX_HEADER: \sectionfont{\normalfont\itshape}
#+LaTeX_HEADER: \subsectionfont{\normalfont\itshape}
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+OPTIONS: H:2 num:nil toc:nil \n:nil @:t ::t |:t ^:{} _:{} *:t TeX:t LaTeX:t
#+STARTUP: showall
- Revision :: $Revision: 0.2 $
- Date :: $Date: [Time-stamp: <2019-04-17 12:56:02 (peter)>] $
- Source :: $Source: /Users/peter/Documents/bootcamps/snippets/ $


* Sum of all positive multiples taken from a list

Problem: Find the sum of all positive multiples of 3 and 5 below 1000.

** Pencil and paper

#+name: P&P sum of 0-15
#+begin_src ditaa :file img/pep_sum_pos_multiples.png :cmdline -r

              |           |           |             |              |
+---+---+---+---+---+---+---+---+---+---+----+----+----+----+----+----+
| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 |
+---+---+---+---+---+---+---+---+---+---+----+----+----+----+----+----+
                      |                   |                         |

#+end_src

#+RESULTS: P&P
[[file:img/pep_sum_pos_multiples.png]]

** With the input of the pencil and paper part

We know that if we use the list [0, 1, 2, ..., 15] the result should
be 60. We also know that some of the numbers are part of both
conditions: Some multiples of 3 are also multiples of 5, for
example 15.

What we need for our program:

1. test for "divisible by n", here n = 3  n = 5
2. we want to keep track of the numbers that test True (for the above)
3. we want to test a lot of numbers in a non-repetitive way
4. we keep track of the hits
5. we sum our hits

We divided our problem up into some smaller problems:

ad 1) what does 'divisible by 3' mean? It clearly does not mean that n /
   == 0.

Take 6 divided by 3 == 2. We need to work with the remainder: 6
divided by 3 == 2 with a remainder of 0.

There is a function to calculate the remainder of a division: %.

6 % 2 == 0; 9 % 7 == 2

In our case, we can test for: x % 3 == 0 OR x % 5 == 0.

ad 2) If we have an empty list, we can add elements to it with the append
   function:

lst = []
lst.append(1)
lst.append(2)
lst # [1, 2]

ad 3) Which means we want to test each number in a list twice, with the
   first test (n % 3 == 0) and with the second test (n % 5 == 0).

So we need some logic. Let's try to write this "logic" down, using pseudo-code.

** Pseudocode

input = lst1
result = lst2

for each element of input:
    if the element % 3 == 0:
        add the element to result
    or if the element % 5 == 0:
        add the element to result
    otherwise: go to the next element

    show the result
    sum result

** Using the REPL (iPython)

#+begin_example
    In [10]: input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    In [13]: result = []
    In [19]: for i in input: 
        ...:     if i % 3 == 0 or i % 5 == 0: 
        ...:         result.append(i)
    In []: print(result)
    Out []: [3, 5, 6, 9, 10, 12, 15]
    In [21]: sum(result)                                                            
    Out[21]: 60
#+end_example

** Sum

Our (first) result is another list with the positive numbers taken
from the input list that qualify as multiples of 3 or 5.

We need to calculate the sum of the elements of that list.

We could use another for-loop, something like:

sum_result = 0
for i in result:
    sum_result = sum_result + i
return sum_result

But Python already has a sum function that works with lists, so the
easy solution is:

sum(result)
